#ifndef WEAPON_RARE_HPP
#define WEAPON_RARE_HPP

class Rare {
	protected:
		std::string name; //ex "Bronze sword "
		int bonusID; // 
	public:
		Rare std::string name_, int bonusID_);
		std::string getName(void);
		int getID(void);
};

class Bronze : public Rare{
		public:
			Bronze() : Rare("Bronze", 0)
			virtual int getBonusDamage(void) const {return 1}
};

class Silver : public Rare{
	public:
		Silver() : Rare("Silver", 0) ;
		virtual int getBonusDamage(void) const {return 3} ;
};

class Gold : public Rare{
	public:
		Gold() : Rare("Silver", 0)
		virtual int getBonusDamage(void) const {return 5} ;
};

class Platinum : public Rare{
	public:
			Platinum() : Rare("Platinum", 0)
		virtual int getBonusDamage(void) const {return 7} ;
};

class Legendary : public Rare{
	public:
		Legendary() : Rare("Legendary", 0)
		virtual int getBonusDamage(void) const {return 9}
};

//Cursed may be implimented later

#endif // WEAPON_RARE_HPP
